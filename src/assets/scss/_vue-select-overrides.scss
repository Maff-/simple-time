@use 'sass:math';

$vs-selected-padding-x: math.div($input-padding-x-sm, 2) !default;
$vs-deselect-indicator-size: 16px;
$vs-deselect-indicator: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$body-secondary-color}'><path d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/></svg>");
$vs-deselect-indicator-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$body-secondary-color-dark}'><path d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/></svg>");

$vs-clear-indicator-size: 16px;
$vs-clear-indicator: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$body-secondary-color}'><path d='M6.586 8 1.293 2.707a1 1 0 0 1 1.414-1.414L8 6.586l5.293-5.293a1 1 0 0 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8Z'/></svg>");
$vs-clear-indicator-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$body-secondary-color-dark}'><path d='M6.586 8 1.293 2.707a1 1 0 0 1 1.414-1.414L8 6.586l5.293-5.293a1 1 0 0 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8Z'/></svg>");

.vs__dropdown-toggle {
  padding-bottom: $input-padding-y !important;
  @include box-shadow($form-select-box-shadow);
}

.vs--open {
  .vs__dropdown-toggle,
  .vs__dropdown-menu {
    border-color: $form-select-focus-border-color;
    //@if $enable-shadows {
    //  @include box-shadow($form-select-box-shadow, $form-select-focus-box-shadow);
    //} @else {
    //  // Avoid using mixin so we can pass custom focus shadow properly
    //  box-shadow: $form-select-focus-box-shadow;
    //}
  }
}

.vs__selected,
.vs__search, .vs__search:focus {
  margin-top: $input-padding-y !important;
  border: none !important;
}

.vs__actions {
  padding-top: $input-padding-y !important;
  padding-left: math.div($input-padding-x, 2) !important;
  padding-right: $input-padding-x !important;
}

.vs__fade-enter-active,
.vs__fade-leave-active {
  transition: none;
}

.vs__selected-options {
  padding-left: $input-padding-x - $vs-selected-padding-x !important;
  padding-right: 0 !important;
}

.vs__selected {
  margin-left: $vs-selected-padding-x;
  margin-right: $vs-selected-padding-x;
  padding-left: $badge-padding-x !important;
  padding-right: $badge-padding-x !important;
}

.vs__deselect {
  margin-left: $badge-padding-x !important;
}

.vs--single {
  .vs__selected-options {
    padding-left: $input-padding-x !important;
  }
  .vs__search,
  .vs__selected {
    padding-left: 0 !important;
    padding-right: 0 !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  .vs__clear svg {
    display: block;
  }
}

.vs--single-line .vs__selected {
  display: inline-block;
  position: absolute;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  left: $input-padding-x;
  right: 0;
}

// Globally replace vue-select indicator with bootstrap's select indicator.
.vs__open-indicator {
  background-image: #{escape-svg($form-select-indicator)}, var(--#{$prefix}form-select-bg-icon, none);
  background-repeat: no-repeat;
  background-position: center;
  background-size: $form-select-bg-size;
  width: $vs-deselect-indicator-size;
  height: $vs-deselect-indicator-size;
  // Disable rotation transition
  //@if not $enable-transitions {
    transition: none;
  //}
}
// Disable indicator rotation, like form-select
.vs--open .vs__open-indicator {
  transform: unset;
}

.vs__deselect, .vs__clear {
  background-repeat: no-repeat;
  background-position: center;
}

.vs__deselect {
  background-image: #{escape-svg($vs-deselect-indicator)};
  background-size: 10px 10px;
  width: 10px;
  height: 10px;
  margin-top: 2px;
}

.vs__clear {
  background-image: #{escape-svg($vs-clear-indicator)};
  background-size: $form-select-bg-size;
  width: $vs-clear-indicator-size;
  height: $vs-clear-indicator-size;
}

// dark mode fixes

.vs__selected, .vs__dropdown-option {
  color: $input-color; // override hardcoded color #333
}

// re-apply default colors, as above has higher priority
.vs__dropdown-option--highlight {
  color: $vs-state-active-color;
}
.vs__dropdown-option--deselect {
  color: $vs-state-deselect-color;
}
.vs__dropdown-option--disabled {
  color: $vs-state-disabled-color;
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .vs__open-indicator {
      background-image: #{escape-svg($form-select-indicator-dark)}, var(--#{$prefix}form-select-bg-icon, none);
    }
    .vs__deselect {
      background-image: #{escape-svg($vs-deselect-indicator-dark)};
    }
    .vs__clear {
      background-image: #{escape-svg($vs-clear-indicator-dark)};
    }
  }
}

// form states

@mixin vs-form-validation-state(
  $state,
  $color,
  $icon,
  $tooltip-color: color-contrast($color),
  $tooltip-bg-color: rgba($color, $form-feedback-tooltip-opacity),
  $focus-box-shadow: 0 0 $input-btn-focus-blur $input-focus-width rgba($color, $input-btn-focus-color-opacity),
  $border-color: $color
) {
  .vs--single-line {
    @include form-validation-state-selector($state) {
      .vs__dropdown-toggle, .vs__dropdown-menu {
        border-color: $border-color;
      }

      @if $enable-validation-icons {
        .vs__actions {
          padding-left: calc(#{$input-line-height * .5em} + #{$input-padding-y} + #{$input-padding-x}) !important;
          background-image: escape-svg($icon);
          background-position: math.div($input-padding-x, 2) .5375rem;
          background-size: $form-select-feedback-icon-size;
          background-repeat: no-repeat;
        }
      }
    }
  }
}

@each $state, $data in $form-validation-states {
  @include vs-form-validation-state($state, $data...);
}